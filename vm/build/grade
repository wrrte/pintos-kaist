TOTAL TESTING SCORE: 61.4%

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

SUMMARY BY TEST SET

Test Set                                      Pts Max  % Ttl  % Max
--------------------------------------------- --- --- ------ ------
tests/threads/Rubric.alarm                      7/  7   1.0%/  1.0%
tests/threads/Rubric.priority                  25/ 25   1.0%/  1.0%
tests/userprog/Rubric.functionality            22/ 40   4.4%/  8.0%
tests/userprog/Rubric.robustness               32/ 40   4.0%/  5.0%
tests/vm/Rubric.functionality                  40/ 82  29.3%/ 60.0%
tests/vm/Rubric.robustness                     26/ 29  17.9%/ 20.0%
tests/filesys/base/Rubric                      13/ 17   3.8%/  5.0%
tests/vm/cow/Rubric                             0/  1   0.0%/ 25.0%
--------------------------------------------- --- --- ------ ------
Total                                                  61.4%/125.0%

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

SUMMARY OF INDIVIDUAL TESTS

Functionality and robustness of alarm clock (tests/threads/Rubric.alarm):
	     1/ 1 tests/threads/alarm-single
	     1/ 1 tests/threads/alarm-multiple
	     1/ 1 tests/threads/alarm-simultaneous
	     2/ 2 tests/threads/alarm-priority

	     1/ 1 tests/threads/alarm-zero
	     1/ 1 tests/threads/alarm-negative

	- Section summary.
	      6/  6 tests passed
	      7/  7 points subtotal

Functionality of priority scheduler (tests/threads/Rubric.priority):
	     1/ 1 tests/threads/priority-change
	     1/ 1 tests/threads/priority-preempt

	     1/ 1 tests/threads/priority-fifo
	     2/ 2 tests/threads/priority-sema
	     2/ 2 tests/threads/priority-condvar

	     2/ 2 tests/threads/priority-donate-one
	     3/ 3 tests/threads/priority-donate-multiple
	     3/ 3 tests/threads/priority-donate-multiple2
	     3/ 3 tests/threads/priority-donate-nest
	     3/ 3 tests/threads/priority-donate-chain
	     2/ 2 tests/threads/priority-donate-sema
	     2/ 2 tests/threads/priority-donate-lower

	- Section summary.
	     12/ 12 tests passed
	     25/ 25 points subtotal

Functionality of system calls (tests/userprog/Rubric.functionality):
	- Test argument passing on Pintos command line.
	     1/ 1 tests/userprog/args-none
	     1/ 1 tests/userprog/args-single
	     1/ 1 tests/userprog/args-multiple
	     1/ 1 tests/userprog/args-many
	     1/ 1 tests/userprog/args-dbl-space

	- Test "create" system call.
	     1/ 1 tests/userprog/create-empty
	     1/ 1 tests/userprog/create-long
	     1/ 1 tests/userprog/create-normal
	     1/ 1 tests/userprog/create-exists

	- Test "open" system call.
	     1/ 1 tests/userprog/open-missing
	     1/ 1 tests/userprog/open-normal
	     1/ 1 tests/userprog/open-twice

	- Test "read" system call.
	     1/ 1 tests/userprog/read-normal
	     1/ 1 tests/userprog/read-zero

	- Test "write" system call.
	     1/ 1 tests/userprog/write-normal
	     1/ 1 tests/userprog/write-zero

	- Test "close" system call.
	     1/ 1 tests/userprog/close-normal

	- Test "fork" system call.
	  ** 0/ 1 tests/userprog/fork-once
	  ** 0/ 1 tests/userprog/fork-multiple
	  ** 0/ 2 tests/userprog/fork-close
	  ** 0/ 2 tests/userprog/fork-read

	- Test "exec" system call.
	     1/ 1 tests/userprog/exec-once
	     1/ 1 tests/userprog/exec-arg
	  ** 0/ 2 tests/userprog/exec-read

	- Test "wait" system call.
	  ** 0/ 1 tests/userprog/wait-simple
	  ** 0/ 1 tests/userprog/wait-twice

	- Test "exit" system call.
	     1/ 1 tests/userprog/exit

	- Test "halt" system call.
	     1/ 1 tests/userprog/halt

	- Test recursive execution of user programs.
	  ** 0/ 2 tests/userprog/fork-recursive
	  ** 0/ 2 tests/userprog/multi-recurse

	- Test read-only executable feature.
	     1/ 1 tests/userprog/rox-simple
	  ** 0/ 2 tests/userprog/rox-child
	  ** 0/ 2 tests/userprog/rox-multichild

	- Section summary.
	     22/ 33 tests passed
	     22/ 40 points subtotal

Robustness of system calls (tests/userprog/Rubric.robustness):
	- Test robustness of file descriptor handling.
	     1/ 1 tests/userprog/close-bad-fd
	     1/ 1 tests/userprog/close-twice
	     1/ 1 tests/userprog/read-bad-fd
	     1/ 1 tests/userprog/read-stdout
	     1/ 1 tests/userprog/write-bad-fd
	     1/ 1 tests/userprog/write-stdin
	  ** 0/ 2 tests/userprog/multi-child-fd

	- Test robustness of pointer handling.
	     1/ 1 tests/userprog/create-bad-ptr
	     1/ 1 tests/userprog/exec-bad-ptr
	     1/ 1 tests/userprog/open-bad-ptr
	     1/ 1 tests/userprog/read-bad-ptr
	     1/ 1 tests/userprog/write-bad-ptr

	- Test robustness of buffer copying across page boundaries.
	     2/ 2 tests/userprog/create-bound
	     2/ 2 tests/userprog/open-boundary
	     2/ 2 tests/userprog/read-boundary
	     2/ 2 tests/userprog/write-boundary
	  ** 0/ 2 tests/userprog/fork-boundary
	  ** 0/ 2 tests/userprog/exec-boundary

	- Test handling of null pointer and empty strings.
	     1/ 1 tests/userprog/create-null
	     1/ 1 tests/userprog/open-null
	     1/ 1 tests/userprog/open-empty

	- Test robustness of "fork", "exec" and "wait" system calls.
	     2/ 2 tests/userprog/exec-missing
	     2/ 2 tests/userprog/wait-bad-pid
	  ** 0/ 2 tests/userprog/wait-killed

	- Test robustness of exception handling.
	     1/ 1 tests/userprog/bad-read
	     1/ 1 tests/userprog/bad-write
	     1/ 1 tests/userprog/bad-jump
	     1/ 1 tests/userprog/bad-read2
	     1/ 1 tests/userprog/bad-write2
	     1/ 1 tests/userprog/bad-jump2

	- Section summary.
	     26/ 30 tests passed
	     32/ 40 points subtotal

Functionality of virtual memory subsystem (tests/vm/Rubric.functionality):
	- Test stack growth.
	     2/ 2 tests/vm/pt-grow-stack
	     4/ 4 tests/vm/pt-grow-stk-sc
	     3/ 3 tests/vm/pt-big-stk-obj

	- Test paging behavior.
	     1/ 1 tests/vm/page-linear
	  ** 0/ 4 tests/vm/page-parallel
	     2/ 2 tests/vm/page-shuffle
	  ** 0/ 2 tests/vm/page-merge-seq
	  ** 0/ 5 tests/vm/page-merge-par
	  ** 0/ 5 tests/vm/page-merge-mm
	  ** 0/ 5 tests/vm/page-merge-stk

	- Test "mmap" system call.
	     1/ 1 tests/vm/mmap-read
	  ** 0/ 3 tests/vm/mmap-write
	     2/ 2 tests/vm/mmap-ro
	     2/ 2 tests/vm/mmap-shuffle
	     1/ 1 tests/vm/mmap-twice
	     2/ 2 tests/vm/mmap-unmap
	  ** 0/ 2 tests/vm/mmap-exit
	  ** 0/ 3 tests/vm/mmap-clean
	  ** 0/ 2 tests/vm/mmap-close
	  ** 0/ 2 tests/vm/mmap-remove
	  ** 0/ 1 tests/vm/mmap-off

	- Test memory swapping
	     3/ 3 tests/vm/swap-anon
	     3/ 3 tests/vm/swap-file
	     6/ 6 tests/vm/swap-iter
	  ** 0/ 8 tests/vm/swap-fork

	- Test lazy loading
	     4/ 4 tests/vm/lazy-anon
	     4/ 4 tests/vm/lazy-file

	- Section summary.
	     15/ 27 tests passed
	     40/ 82 points subtotal

Robustness of virtual memory subsystem (tests/vm/Rubric.robustness):
	- Test robustness of page table support.
	     1/ 1 tests/vm/pt-bad-addr
	     3/ 3 tests/vm/pt-bad-read
	     1/ 1 tests/vm/pt-write-code
	     3/ 3 tests/vm/pt-write-code2
	     2/ 2 tests/vm/pt-grow-bad

	- Test robustness of "mmap" system call.
	     1/ 1 tests/vm/mmap-bad-fd
	     1/ 1 tests/vm/mmap-bad-fd2
	     1/ 1 tests/vm/mmap-bad-fd3

	  ** 0/ 3 tests/vm/mmap-inherit
	     1/ 1 tests/vm/mmap-null
	     1/ 1 tests/vm/mmap-zero
	     2/ 2 tests/vm/mmap-zero-len

	     1/ 1 tests/vm/mmap-misalign

	     1/ 1 tests/vm/mmap-over-code
	     1/ 1 tests/vm/mmap-over-data
	     2/ 2 tests/vm/mmap-over-stk
	     1/ 1 tests/vm/mmap-overlap
	     1/ 1 tests/vm/mmap-bad-off
	     2/ 2 tests/vm/mmap-kernel

	- Section summary.
	     18/ 19 tests passed
	     26/ 29 points subtotal

Functionality of base file system (tests/filesys/base/Rubric):
	- Test basic support for small files.
	     1/ 1 tests/filesys/base/sm-create
	     1/ 1 tests/filesys/base/sm-full
	     1/ 1 tests/filesys/base/sm-random
	     1/ 1 tests/filesys/base/sm-seq-block
	     2/ 2 tests/filesys/base/sm-seq-random

	- Test basic support for large files.
	     1/ 1 tests/filesys/base/lg-create
	     1/ 1 tests/filesys/base/lg-full
	     1/ 1 tests/filesys/base/lg-random
	     1/ 1 tests/filesys/base/lg-seq-block
	     2/ 2 tests/filesys/base/lg-seq-random

	- Test synchronized multiprogram access to files.
	  ** 0/ 2 tests/filesys/base/syn-read
	  ** 0/ 2 tests/filesys/base/syn-write
	     1/ 1 tests/filesys/base/syn-remove

	- Section summary.
	     11/ 13 tests passed
	     13/ 17 points subtotal

Functionality of copy-on-write (tests/vm/cow/Rubric):
	- Basic functionality for copy-on-write.
	  ** 0/ 1 tests/vm/cow/cow-simple

	- Section summary.
	      0/  1 tests passed
	      0/  1 points subtotal


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/fork-once FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (fork-once) begin
  (fork-once) child run
  child: exit(81)
  (fork-once) Parent: child exit status is 81
  (fork-once) end
  fork-once: exit(0)
Differences in `diff -u' format:
  (fork-once) begin
- (fork-once) child run
- child: exit(81)
- (fork-once) Parent: child exit status is 81
+ child: exit(-1)
+ (fork-once) Parent: child exit status is -1
  (fork-once) end
  fork-once: exit(0)

OUTPUT FROM tests/userprog/fork-once:

Kernel command line: -q -f put fork-once run fork-once
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 103 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'fork-once' into the file system...
Executing 'fork-once':
(fork-once) begin
child: exit(-1)
(fork-once) Parent: child exit status is -1
(fork-once) end
fork-once: exit(0)
Execution of 'fork-once' complete.
Timer: 79 ticks
Thread: 33 idle ticks, 43 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 80 reads, 234 writes
hd1:0: 103 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1007 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/fork-multiple FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (fork-multiple) begin
  (fork-multiple) child run
  child: exit(4)
  (fork-multiple) Parent: child exit status is 4
  (fork-multiple) child run
  child: exit(5)
  (fork-multiple) Parent: child exit status is 5
  (fork-multiple) child run
  child: exit(6)
  (fork-multiple) Parent: child exit status is 6
  (fork-multiple) child run
  child: exit(7)
  (fork-multiple) Parent: child exit status is 7
  (fork-multiple) end
  fork-multiple: exit(0)
Differences in `diff -u' format:
  (fork-multiple) begin
- (fork-multiple) child run
- child: exit(4)
- (fork-multiple) Parent: child exit status is 4
- (fork-multiple) child run
- child: exit(5)
- (fork-multiple) Parent: child exit status is 5
- (fork-multiple) child run
- child: exit(6)
- (fork-multiple) Parent: child exit status is 6
- (fork-multiple) child run
- child: exit(7)
- (fork-multiple) Parent: child exit status is 7
+ child: exit(-1)
+ (fork-multiple) Parent: child exit status is -1
+ child: exit(-1)
+ (fork-multiple) Parent: child exit status is -1
+ child: exit(-1)
+ (fork-multiple) Parent: child exit status is -1
+ child: exit(-1)
+ (fork-multiple) Parent: child exit status is -1
  (fork-multiple) end
  fork-multiple: exit(0)

OUTPUT FROM tests/userprog/fork-multiple:

Kernel command line: -q -f put fork-multiple run fork-multiple
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 104 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'fork-multiple' into the file system...
Executing 'fork-multiple':
(fork-multiple) begin
child: exit(-1)
(fork-multiple) Parent: child exit status is -1
child: exit(-1)
(fork-multiple) Parent: child exit status is -1
child: exit(-1)
(fork-multiple) Parent: child exit status is -1
child: exit(-1)
(fork-multiple) Parent: child exit status is -1
(fork-multiple) end
fork-multiple: exit(0)
Execution of 'fork-multiple' complete.
Timer: 84 ticks
Thread: 32 idle ticks, 47 kernel ticks, 5 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 87 reads, 236 writes
hd1:0: 104 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1235 characters output
Keyboard: 0 keys pressed
Exception: 4 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/fork-close FAILURE:

Kernel panic in run: PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596
Translation of call stack:
0x000000800421847d: debug_panic (lib/kernel/debug.c:32)
0x000000800422148a: vm_alloc_page_with_initializer (vm/vm.c:57)
0x0000008004221f2b: supplemental_page_table_copy (vm/vm.c:321)
0x000000800421bdbd: __do_fork (userprog/process.c:169)
0x0000008004207596: kernel_thread (threads/thread.c:465)

OUTPUT FROM tests/userprog/fork-close:

Kernel command line: -q -f put fork-close put sample.txt run fork-close
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 110 sector (55 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'fork-close' into the file system...
Putting 'sample.txt' into the file system...
Executing 'fork-close':
(fork-close) begin
(fork-close) open "sample.txt"
Kernel PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 84 ticks
Thread: 38 idle ticks, 44 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 112 reads, 258 writes
hd1:0: 110 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1323 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/fork-read FAILURE:

Kernel panic in run: PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596
Translation of call stack:
0x000000800421847d: debug_panic (lib/kernel/debug.c:32)
0x000000800422148a: vm_alloc_page_with_initializer (vm/vm.c:57)
0x0000008004221f2b: supplemental_page_table_copy (vm/vm.c:321)
0x000000800421bdbd: __do_fork (userprog/process.c:169)
0x0000008004207596: kernel_thread (threads/thread.c:465)

OUTPUT FROM tests/userprog/fork-read:

Kernel command line: -q -f put fork-read put sample.txt run fork-read
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 111 sector (55 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'fork-read' into the file system...
Putting 'sample.txt' into the file system...
Executing 'fork-read':
(fork-read) begin
(fork-read) open "sample.txt"
Kernel PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 83 ticks
Thread: 32 idle ticks, 49 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 115 reads, 260 writes
hd1:0: 111 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1317 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/exec-read FAILURE:

Kernel panic in run: PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596
Translation of call stack:
0x000000800421847d: debug_panic (lib/kernel/debug.c:32)
0x000000800422148a: vm_alloc_page_with_initializer (vm/vm.c:57)
0x0000008004221f2b: supplemental_page_table_copy (vm/vm.c:321)
0x000000800421bdbd: __do_fork (userprog/process.c:169)
0x0000008004207596: kernel_thread (threads/thread.c:465)

OUTPUT FROM tests/userprog/exec-read:

Kernel command line: -q -f put exec-read put sample.txt put child-read run exec-read
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 229 sector (114 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'exec-read' into the file system...
Putting 'sample.txt' into the file system...
Putting 'child-read' into the file system...
Executing 'exec-read':
(exec-read) begin
(exec-read) open "sample.txt"
(exec-read) read "sample.txt" first 20 bytes
Kernel PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 87 ticks
Thread: 38 idle ticks, 46 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 143 reads, 506 writes
hd1:0: 229 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1423 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/wait-simple FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (wait-simple) begin
  (child-simple) run
  child-simple: exit(81)
  (wait-simple) wait(exec()) = 81
  (wait-simple) end
  wait-simple: exit(0)
Differences in `diff -u' format:
  (wait-simple) begin
- (child-simple) run
- child-simple: exit(81)
- (wait-simple) wait(exec()) = 81
+ child-simple: exit(-1)
+ (wait-simple) wait(exec()) = -1
  (wait-simple) end
  wait-simple: exit(0)

OUTPUT FROM tests/userprog/wait-simple:

Kernel command line: -q -f put wait-simple put child-simple run wait-simple
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 204 sector (102 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'wait-simple' into the file system...
Putting 'child-simple' into the file system...
Executing 'wait-simple':
(wait-simple) begin
child-simple: exit(-1)
(wait-simple) wait(exec()) = -1
(wait-simple) end
wait-simple: exit(0)
Execution of 'wait-simple' complete.
Timer: 87 ticks
Thread: 37 idle ticks, 49 kernel ticks, 1 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 107 reads, 446 writes
hd1:0: 204 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1084 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/wait-twice FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (wait-twice) begin
  (child-simple) run
  child-simple: exit(81)
  (wait-twice) wait(exec()) = 81
  (wait-twice) wait(exec()) = -1
  (wait-twice) end
  wait-twice: exit(0)
Differences in `diff -u' format:
  (wait-twice) begin
- (child-simple) run
- child-simple: exit(81)
- (wait-twice) wait(exec()) = 81
+ child-simple: exit(-1)
+ (wait-twice) wait(exec()) = -1
  (wait-twice) wait(exec()) = -1
  (wait-twice) end
  wait-twice: exit(0)

OUTPUT FROM tests/userprog/wait-twice:

Kernel command line: -q -f put wait-twice put child-simple run wait-twice
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 204 sector (102 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'wait-twice' into the file system...
Putting 'child-simple' into the file system...
Executing 'wait-twice':
(wait-twice) begin
child-simple: exit(-1)
(wait-twice) wait(exec()) = -1
(wait-twice) wait(exec()) = -1
(wait-twice) end
wait-twice: exit(0)
Execution of 'wait-twice' complete.
Timer: 88 ticks
Thread: 35 idle ticks, 50 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 107 reads, 446 writes
hd1:0: 204 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1106 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/fork-recursive FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (fork-recursive) begin
  (fork-recursive) child run
  (fork-recursive) child run
  (fork-recursive) child run
  (fork-recursive) child run
  (fork-recursive) child run
  (fork-recursive) child run
  (fork-recursive) child run
  (fork-recursive) child run
  child: exit(10)
  (fork-recursive) Parent: child exit status is 10
  child: exit(10)
  (fork-recursive) Parent: child exit status is 10
  child: exit(9)
  (fork-recursive) Parent: child exit status is 9
  child: exit(8)
  (fork-recursive) Parent: child exit status is 8
  child: exit(7)
  (fork-recursive) Parent: child exit status is 7
  child: exit(6)
  (fork-recursive) Parent: child exit status is 6
  child: exit(5)
  (fork-recursive) Parent: child exit status is 5
  child: exit(4)
  (fork-recursive) Parent: child exit status is 4
  (fork-recursive) end
  fork-recursive: exit(0)
Differences in `diff -u' format:
  (fork-recursive) begin
- (fork-recursive) child run
- (fork-recursive) child run
- (fork-recursive) child run
- (fork-recursive) child run
- (fork-recursive) child run
- (fork-recursive) child run
- (fork-recursive) child run
- (fork-recursive) child run
- child: exit(10)
- (fork-recursive) Parent: child exit status is 10
- child: exit(10)
- (fork-recursive) Parent: child exit status is 10
- child: exit(9)
- (fork-recursive) Parent: child exit status is 9
- child: exit(8)
- (fork-recursive) Parent: child exit status is 8
- child: exit(7)
- (fork-recursive) Parent: child exit status is 7
- child: exit(6)
- (fork-recursive) Parent: child exit status is 6
- child: exit(5)
- (fork-recursive) Parent: child exit status is 5
- child: exit(4)
- (fork-recursive) Parent: child exit status is 4
+ child: exit(-1)
+ (fork-recursive) Parent: child exit status is -1
  (fork-recursive) end
  fork-recursive: exit(0)

OUTPUT FROM tests/userprog/fork-recursive:

Kernel command line: -q -f put fork-recursive run fork-recursive
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 104 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'fork-recursive' into the file system...
Executing 'fork-recursive':
(fork-recursive) begin
child: exit(-1)
(fork-recursive) Parent: child exit status is -1
(fork-recursive) end
fork-recursive: exit(0)
Execution of 'fork-recursive' complete.
Timer: 87 ticks
Thread: 30 idle ticks, 51 kernel ticks, 6 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 87 reads, 236 writes
hd1:0: 104 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1052 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/multi-recurse FAILURE:

run: fork() returned -1: FAILED

OUTPUT FROM tests/userprog/multi-recurse:

Kernel command line: -q -f put multi-recurse run 'multi-recurse 15'
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 113 sector (56 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'multi-recurse' into the file system...
Executing 'multi-recurse 15':
(multi-recurse) begin 15
(multi-recurse) exec("multi-recurse 14")
multi-recurse: exit(-1)
(multi-recurse) fork() returned -1: FAILED
multi-recurse: exit(1)
Execution of 'multi-recurse' complete.
Timer: 81 ticks
Thread: 34 idle ticks, 44 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 87 reads, 254 writes
hd1:0: 113 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1078 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/rox-child FAILURE:

run: fork() returned -1: FAILED

OUTPUT FROM tests/userprog/rox-child:

Kernel command line: -q -f put rox-child put child-rox run rox-child
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 220 sector (110 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'rox-child' into the file system...
Putting 'child-rox' into the file system...
Executing 'rox-child':
(rox-child) begin
(rox-child) open "child-rox"
(rox-child) read "child-rox"
(rox-child) write "child-rox"
(rox-child) exec "child-rox 1"
child-rox: exit(-1)
(rox-child) fork() returned -1: FAILED
rox-child: exit(1)
Execution of 'rox-child' complete.
Timer: 84 ticks
Thread: 34 idle ticks, 47 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 114 reads, 479 writes
hd1:0: 220 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1169 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/rox-multichild FAILURE:

run: fork() returned -1: FAILED

OUTPUT FROM tests/userprog/rox-multichild:

Kernel command line: -q -f put rox-multichild put child-rox run rox-multichild
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 220 sector (110 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'rox-multichild' into the file system...
Putting 'child-rox' into the file system...
Executing 'rox-multichild':
(rox-multichild) begin
(rox-multichild) open "child-rox"
(rox-multichild) read "child-rox"
(rox-multichild) write "child-rox"
(rox-multichild) exec "child-rox 5"
child-rox: exit(-1)
(rox-multichild) fork() returned -1: FAILED
rox-multichild: exit(1)
Execution of 'rox-multichild' complete.
Timer: 89 ticks
Thread: 37 idle ticks, 50 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 114 reads, 479 writes
hd1:0: 220 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1229 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/multi-child-fd FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (multi-child-fd) begin
  (multi-child-fd) open "sample.txt"
  (child-close) begin
  (child-close) verified contents of "sample.txt"
  (child-close) end
  child-close: exit(0)
  (multi-child-fd) wait(exec()) = 0
  (multi-child-fd) verified contents of "sample.txt"
  (multi-child-fd) end
  multi-child-fd: exit(0)
Differences in `diff -u' format:
  (multi-child-fd) begin
  (multi-child-fd) open "sample.txt"
- (child-close) begin
- (child-close) verified contents of "sample.txt"
- (child-close) end
- child-close: exit(0)
- (multi-child-fd) wait(exec()) = 0
+ child-close: exit(-1)
+ (multi-child-fd) wait(exec()) = -1
  (multi-child-fd) verified contents of "sample.txt"
  (multi-child-fd) end
  multi-child-fd: exit(0)

OUTPUT FROM tests/userprog/multi-child-fd:

Kernel command line: -q -f put multi-child-fd put sample.txt put child-close run multi-child-fd
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 220 sector (110 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'multi-child-fd' into the file system...
Putting 'sample.txt' into the file system...
Putting 'child-close' into the file system...
Executing 'multi-child-fd':
(multi-child-fd) begin
(multi-child-fd) open "sample.txt"
child-close: exit(-1)
(multi-child-fd) wait(exec()) = -1
(multi-child-fd) verified contents of "sample.txt"
(multi-child-fd) end
multi-child-fd: exit(0)
Execution of 'multi-child-fd' complete.
Timer: 84 ticks
Thread: 34 idle ticks, 47 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 149 reads, 488 writes
hd1:0: 220 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1254 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/fork-boundary FAILURE:

Kernel panic in run: PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596
Translation of call stack:
0x000000800421847d: debug_panic (lib/kernel/debug.c:32)
0x000000800422148a: vm_alloc_page_with_initializer (vm/vm.c:57)
0x0000008004221f2b: supplemental_page_table_copy (vm/vm.c:321)
0x000000800421bdbd: __do_fork (userprog/process.c:169)
0x0000008004207596: kernel_thread (threads/thread.c:465)

OUTPUT FROM tests/userprog/fork-boundary:

Kernel command line: -q -f put fork-boundary run fork-boundary
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 106 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'fork-boundary' into the file system...
Executing 'fork-boundary':
(fork-boundary) begin
Kernel PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 82 ticks
Thread: 35 idle ticks, 46 kernel ticks, 1 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 80 reads, 240 writes
hd1:0: 106 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1246 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/exec-boundary FAILURE:

Kernel panic in run: PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596
Translation of call stack:
0x000000800421847d: debug_panic (lib/kernel/debug.c:32)
0x000000800422148a: vm_alloc_page_with_initializer (vm/vm.c:57)
0x0000008004221f2b: supplemental_page_table_copy (vm/vm.c:321)
0x000000800421bdbd: __do_fork (userprog/process.c:169)
0x0000008004207596: kernel_thread (threads/thread.c:465)

OUTPUT FROM tests/userprog/exec-boundary:

Kernel command line: -q -f put exec-boundary put child-simple run exec-boundary
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 207 sector (103 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'exec-boundary' into the file system...
Putting 'child-simple' into the file system...
Executing 'exec-boundary':
(exec-boundary) begin
Kernel PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 86 ticks
Thread: 36 idle ticks, 49 kernel ticks, 1 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 107 reads, 452 writes
hd1:0: 207 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1312 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/wait-killed FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (wait-killed) begin
  (child-bad) begin
  child-bad: exit(-1)
  (wait-killed) wait(exec()) = -1
  (wait-killed) end
  wait-killed: exit(0)
Differences in `diff -u' format:
  (wait-killed) begin
- (child-bad) begin
  child-bad: exit(-1)
  (wait-killed) wait(exec()) = -1
  (wait-killed) end
  wait-killed: exit(0)
Acceptable output:
  (wait-killed) begin
  (child-bad) begin
  load: pintos: open failed
  child-bad: exit(-1)
  (wait-killed) wait(exec()) = -1
  (wait-killed) end
  wait-killed: exit(0)
Differences in `diff -u' format:
  (wait-killed) begin
- (child-bad) begin
- load: pintos: open failed
  child-bad: exit(-1)
  (wait-killed) wait(exec()) = -1
  (wait-killed) end
  wait-killed: exit(0)

OUTPUT FROM tests/userprog/wait-killed:

Kernel command line: -q -f put wait-killed put child-bad run wait-killed
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  91,648,000 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 205 sector (102 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'wait-killed' into the file system...
Putting 'child-bad' into the file system...
Executing 'wait-killed':
(wait-killed) begin
child-bad: exit(-1)
(wait-killed) wait(exec()) = -1
(wait-killed) end
wait-killed: exit(0)
Execution of 'wait-killed' complete.
Timer: 85 ticks
Thread: 34 idle ticks, 48 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 107 reads, 448 writes
hd1:0: 205 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1074 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/page-parallel FAILURE:

run: wait for child 0: FAILED

OUTPUT FROM tests/vm/page-parallel:

Kernel command line: -q -f put page-parallel put child-linear run page-parallel
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 209 sector (104 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'page-parallel' into the file system...
Putting 'child-linear' into the file system...
Executing 'page-parallel':
(page-parallel) begin
child-linear: exit(-1)
child-linear: exit(-1)
child-linear: exit(-1)
child-linear: exit(-1)
(page-parallel) wait for child 0
(page-parallel) wait for child 0: FAILED
page-parallel: exit(1)
Execution of 'page-parallel' complete.
Timer: 84 ticks
Thread: 33 idle ticks, 48 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 107 reads, 456 writes
hd1:0: 209 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1191 characters output
Keyboard: 0 keys pressed
Exception: 4 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/page-merge-seq FAILURE:

Kernel panic in run: PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596
Translation of call stack:
0x000000800421847d: debug_panic (lib/kernel/debug.c:32)
0x000000800422148a: vm_alloc_page_with_initializer (vm/vm.c:57)
0x0000008004221f2b: supplemental_page_table_copy (vm/vm.c:321)
0x000000800421bdbd: __do_fork (userprog/process.c:169)
0x0000008004207596: kernel_thread (threads/thread.c:465)

OUTPUT FROM tests/vm/page-merge-seq:

Kernel command line: -q -f put page-merge-seq put child-sort run page-merge-seq
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 216 sector (108 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'page-merge-seq' into the file system...
Putting 'child-sort' into the file system...
Executing 'page-merge-seq':
(page-merge-seq) begin
(page-merge-seq) init
(page-merge-seq) sort chunk 0
Kernel PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 162 ticks
Thread: 39 idle ticks, 47 kernel ticks, 76 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 139 reads, 734 writes
hd1:0: 216 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1367 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/page-merge-par FAILURE:

Kernel panic in run: PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596
Translation of call stack:
0x000000800421847d: debug_panic (lib/kernel/debug.c:32)
0x000000800422148a: vm_alloc_page_with_initializer (vm/vm.c:57)
0x0000008004221f2b: supplemental_page_table_copy (vm/vm.c:321)
0x000000800421bdbd: __do_fork (userprog/process.c:169)
0x0000008004207596: kernel_thread (threads/thread.c:465)

OUTPUT FROM tests/vm/page-merge-par:

Kernel command line: -q -f put page-merge-par put child-sort run page-merge-par
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 218 sector (109 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'page-merge-par' into the file system...
Putting 'child-sort' into the file system...
Executing 'page-merge-par':
(page-merge-par) begin
(page-merge-par) init
(page-merge-par) sort chunk 0
Kernel PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 220 ticks
Thread: 41 idle ticks, 48 kernel ticks, 131 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 139 reads, 998 writes
hd1:0: 218 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1369 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/page-merge-mm FAILURE:

Kernel panic in run: PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596
Translation of call stack:
0x000000800421847d: debug_panic (lib/kernel/debug.c:32)
0x000000800422148a: vm_alloc_page_with_initializer (vm/vm.c:57)
0x0000008004221f2b: supplemental_page_table_copy (vm/vm.c:321)
0x000000800421bdbd: __do_fork (userprog/process.c:169)
0x0000008004207596: kernel_thread (threads/thread.c:465)

OUTPUT FROM tests/vm/page-merge-mm:

Kernel command line: -q -f put page-merge-mm put child-qsort-mm run page-merge-mm
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 224 sector (112 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'page-merge-mm' into the file system...
Putting 'child-qsort-mm' into the file system...
Executing 'page-merge-mm':
(page-merge-mm) begin
(page-merge-mm) init
(page-merge-mm) sort chunk 0
Kernel PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 242 ticks
Thread: 40 idle ticks, 51 kernel ticks, 151 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 140 reads, 1010 writes
hd1:0: 224 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1371 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/page-merge-stk FAILURE:

Kernel panic in run: PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596
Translation of call stack:
0x000000800421847d: debug_panic (lib/kernel/debug.c:32)
0x000000800422148a: vm_alloc_page_with_initializer (vm/vm.c:57)
0x0000008004221f2b: supplemental_page_table_copy (vm/vm.c:321)
0x000000800421bdbd: __do_fork (userprog/process.c:169)
0x0000008004207596: kernel_thread (threads/thread.c:465)

OUTPUT FROM tests/vm/page-merge-stk:

Kernel command line: -q -f put page-merge-stk put child-qsort run page-merge-stk
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 224 sector (112 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'page-merge-stk' into the file system...
Putting 'child-qsort' into the file system...
Executing 'page-merge-stk':
(page-merge-stk) begin
(page-merge-stk) init
(page-merge-stk) sort chunk 0
Kernel PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 210 ticks
Thread: 37 idle ticks, 44 kernel ticks, 129 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 139 reads, 1010 writes
hd1:0: 224 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1372 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-write FAILURE:

run: compare read data against written data: FAILED

OUTPUT FROM tests/vm/mmap-write:

Kernel command line: -q -f put mmap-write run mmap-write
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 107 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-write' into the file system...
Executing 'mmap-write':
(mmap-write) begin
(mmap-write) create "sample.txt"
(mmap-write) open "sample.txt"
(mmap-write) mmap "sample.txt"
(mmap-write) compare read data against written data
(mmap-write) compare read data against written data: FAILED
mmap-write: exit(1)
Execution of 'mmap-write' complete.
Timer: 86 ticks
Thread: 34 idle ticks, 47 kernel ticks, 5 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 118 reads, 256 writes
hd1:0: 107 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1146 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-exit FAILURE:

Kernel panic in run: PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596
Translation of call stack:
0x000000800421847d: debug_panic (lib/kernel/debug.c:32)
0x000000800422148a: vm_alloc_page_with_initializer (vm/vm.c:57)
0x0000008004221f2b: supplemental_page_table_copy (vm/vm.c:321)
0x000000800421bdbd: __do_fork (userprog/process.c:169)
0x0000008004207596: kernel_thread (threads/thread.c:465)

OUTPUT FROM tests/vm/mmap-exit:

Kernel command line: -q -f put mmap-exit put child-mm-wrt run mmap-exit
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 210 sector (105 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-exit' into the file system...
Putting 'child-mm-wrt' into the file system...
Executing 'mmap-exit':
(mmap-exit) begin
Kernel PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 81 ticks
Thread: 31 idle ticks, 48 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 108 reads, 458 writes
hd1:0: 210 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1292 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-clean FAILURE:

run: write "sample.txt": FAILED

OUTPUT FROM tests/vm/mmap-clean:

Kernel command line: -q -f put mmap-clean put sample.txt run mmap-clean
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 112 sector (56 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-clean' into the file system...
Putting 'sample.txt' into the file system...
Executing 'mmap-clean':
(mmap-clean) begin
(mmap-clean) open "sample.txt"
(mmap-clean) mmap "sample.txt"
(mmap-clean) write "sample.txt"
(mmap-clean) write "sample.txt": FAILED
mmap-clean: exit(1)
Execution of 'mmap-clean' complete.
Timer: 79 ticks
Thread: 32 idle ticks, 46 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 117 reads, 262 writes
hd1:0: 112 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1133 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-close FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (mmap-close) begin
  (mmap-close) open "sample.txt"
  (mmap-close) mmap "sample.txt"
  (mmap-close) end
Differences in `diff -u' format:
  (mmap-close) begin
  (mmap-close) open "sample.txt"
  (mmap-close) mmap "sample.txt"
- (mmap-close) end

(Process exit codes are excluded for matching purposes.)

OUTPUT FROM tests/vm/mmap-close:

Kernel command line: -q -f put mmap-close put sample.txt run mmap-close
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 109 sector (54 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-close' into the file system...
Putting 'sample.txt' into the file system...
Executing 'mmap-close':
(mmap-close) begin
(mmap-close) open "sample.txt"
(mmap-close) mmap "sample.txt"
mmap-close: exit(-1)
Execution of 'mmap-close' complete.
Timer: 84 ticks
Thread: 35 idle ticks, 47 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 120 reads, 256 writes
hd1:0: 109 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1062 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-remove FAILURE:

Kernel panic in run: PANIC at ../../devices/disk.c:411 in select_sector(): assertion `sec_no < d->capacity' failed.
Call stack: 0x800421847d 0x8004214556 0x8004213b0a 0x8004220613 0x800421f614 0x800421c7f5 0x8004222272 0x8004221ca4 0x8004221b56 0x800421d290 0x80042092e1 0x80042096ff 0x4002f9 0x400e51 0x400e9a
Translation of call stack:
0x000000800421847d: debug_panic (lib/kernel/debug.c:32)
0x0000008004214556: select_sector (devices/disk.c:412)
0x0000008004213b0a: disk_read (devices/disk.c:220)
0x0000008004220613: inode_read_at (filesys/inode.c:205)
0x000000800421f614: file_read (filesys/file.c:71)
0x000000800421c7f5: lazy_load_segment (userprog/process.c:689)
0x0000008004222272: uninit_initialize (vm/uninit.c:55 (discriminator 4))
0x0000008004221ca4: vm_do_claim_page (vm/vm.c:270)
0x0000008004221b56: vm_try_handle_fault (vm/vm.c:234)
0x000000800421d290: page_fault (userprog/exception.c:145)
0x00000080042092e1: intr_handler (threads/interrupt.c:352)
0x00000080042096ff: intr_entry (threads/intr-stubs.o:?)
0x00000000004002f9: (unknown)
0x0000000000400e51: (unknown)
0x0000000000400e9a: (unknown)

This assertion commonly fails when accessing a file via an inode that
has been closed and freed.  Freeing an inode clears all its sector
indexes to 0xcccccccc, which is not a valid sector number for disks
smaller than about 1.6 TB.

OUTPUT FROM tests/vm/mmap-remove:

Kernel command line: -q -f put mmap-remove put sample.txt run mmap-remove
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 110 sector (55 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-remove' into the file system...
Putting 'sample.txt' into the file system...
Executing 'mmap-remove':
(mmap-remove) begin
(mmap-remove) open "sample.txt"
(mmap-remove) mmap "sample.txt"
(mmap-remove) remove "sample.txt"
(mmap-remove) try to open "sample.txt"
(mmap-remove) create "another"
Kernel PANIC at ../../devices/disk.c:411 in select_sector(): assertion `sec_no < d->capacity' failed.
Call stack: 0x800421847d 0x8004214556 0x8004213b0a 0x8004220613 0x800421f614 0x800421c7f5 0x8004222272 0x8004221ca4 0x8004221b56 0x800421d290 0x80042092e1 0x80042096ff 0x4002f9 0x400e51 0x400e9a 0Interrupt 0x0d (#GP General Protection Exception) at rip=80042154b7
 cr2=0000000010000000 error=               0
rax 0000800421aa7800 rbx 0000000010000000 rcx 00000080040b8000 rdx 00000000000003d4
rsp 0000008004247c10 rbp 0000008004247c20 rsi 000000000000a40f rdi 0000000000000000
rip 00000080042154b7 r8 0000008004247b28  r9 000000800421b9c6 r10 0000000000000000
r11 0000000000000202 r12 0000008004a29000 r13 0000000000000000 r14 00008004247f1000
r15 0000800420aaa800 rflags 00000006
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC recursion at ../../userprog/exception.c:97 in kill().
Timer: 84 ticks
Thread: 34 idle ticks, 45 kernel ticks, 5 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 165 reads, 351 writes
hd1:0: 110 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 2002 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-off FAILURE:

run: try to mmap with offset 0x1000: FAILED

OUTPUT FROM tests/vm/mmap-off:

Kernel command line: -q -f put mmap-off put large.txt run mmap-off
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  153,804,800 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 7,933 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-off' into the file system...
Putting 'large.txt' into the file system...
Executing 'mmap-off':
(mmap-off) begin
(mmap-off) open "large.txt"
(mmap-off) try to mmap with offset 0x1000
(mmap-off) try to mmap with offset 0x1000: FAILED
mmap-off: exit(1)
Execution of 'mmap-off' complete.
Timer: 266 ticks
Thread: 124 idle ticks, 139 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 112 reads, 15904 writes
hd1:0: 7933 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1110 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/swap-fork FAILURE:

Kernel panic in run: PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596
Translation of call stack:
0x000000800421847d: debug_panic (lib/kernel/debug.c:32)
0x000000800422148a: vm_alloc_page_with_initializer (vm/vm.c:57)
0x0000008004221f2b: supplemental_page_table_copy (vm/vm.c:321)
0x000000800421bdbd: __do_fork (userprog/process.c:169)
0x0000008004207596: kernel_thread (threads/thread.c:465)

OUTPUT FROM tests/vm/swap-fork:

Kernel command line: -q -f put swap-fork put child-swap run swap-fork
0 ~ 9fc00 1
100000 ~ 27e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x27e0000 (Usable: 39,808 kB)
Calibrating timer...  155,443,200 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 4,119 sector (2 MB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 403,200 sector (196 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'swap-fork' into the file system...
Putting 'child-swap' into the file system...
Executing 'swap-fork':
(swap-fork) begin
Kernel PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 193 ticks
Thread: 86 idle ticks, 104 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 114 reads, 8276 writes
hd1:0: 4119 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1296 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/mmap-inherit FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (mmap-inherit) begin
  (mmap-inherit) open "sample.txt"
  (mmap-inherit) mmap "sample.txt"
  (mmap-inherit) exec "child-inherit"
  (child-inherit) begin
  child-inherit: exit(-1)
  (mmap-inherit) checking that mmap'd file still has same data
  (mmap-inherit) end
  mmap-inherit: exit(0)
Differences in `diff -u' format:
  (mmap-inherit) begin
  (mmap-inherit) open "sample.txt"
  (mmap-inherit) mmap "sample.txt"
- (mmap-inherit) exec "child-inherit"
- (child-inherit) begin
  child-inherit: exit(-1)
  (mmap-inherit) checking that mmap'd file still has same data
  (mmap-inherit) end
  mmap-inherit: exit(0)

(User fault messages are excluded for matching purposes.)

OUTPUT FROM tests/vm/mmap-inherit:

Kernel command line: -q -f put mmap-inherit put sample.txt put child-inherit run mmap-inherit
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 215 sector (107 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'mmap-inherit' into the file system...
Putting 'sample.txt' into the file system...
Putting 'child-inherit' into the file system...
Executing 'mmap-inherit':
(mmap-inherit) begin
(mmap-inherit) open "sample.txt"
(mmap-inherit) mmap "sample.txt"
child-inherit: exit(-1)
(mmap-inherit) checking that mmap'd file still has same data
(mmap-inherit) end
mmap-inherit: exit(0)
Execution of 'mmap-inherit' complete.
Timer: 82 ticks
Thread: 36 idle ticks, 43 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 153 reads, 478 writes
hd1:0: 215 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1250 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/syn-read FAILURE:

Kernel panic in run: PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596
Translation of call stack:
0x000000800421847d: debug_panic (lib/kernel/debug.c:32)
0x000000800422148a: vm_alloc_page_with_initializer (vm/vm.c:57)
0x0000008004221f2b: supplemental_page_table_copy (vm/vm.c:321)
0x000000800421bdbd: __do_fork (userprog/process.c:169)
0x0000008004207596: kernel_thread (threads/thread.c:465)

OUTPUT FROM tests/filesys/base/syn-read:

Kernel command line: -q -f put syn-read put child-syn-read run syn-read
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 225 sector (112 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'syn-read' into the file system...
Putting 'child-syn-read' into the file system...
Executing 'syn-read':
(syn-read) begin
(syn-read) create "data"
(syn-read) open "data"
(syn-read) write "data"
(syn-read) close "data"
Kernel PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 87 ticks
Thread: 36 idle ticks, 48 kernel ticks, 3 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 136 reads, 504 writes
hd1:0: 225 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1387 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/syn-write FAILURE:

Kernel panic in run: PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596
Translation of call stack:
0x000000800421847d: debug_panic (lib/kernel/debug.c:32)
0x000000800422148a: vm_alloc_page_with_initializer (vm/vm.c:57)
0x0000008004221f2b: supplemental_page_table_copy (vm/vm.c:321)
0x000000800421bdbd: __do_fork (userprog/process.c:169)
0x0000008004207596: kernel_thread (threads/thread.c:465)

OUTPUT FROM tests/filesys/base/syn-write:

Kernel command line: -q -f put syn-write put child-syn-wrt run syn-write
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 226 sector (113 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'syn-write' into the file system...
Putting 'child-syn-wrt' into the file system...
Executing 'syn-write':
(syn-write) begin
(syn-write) create "stuff"
Kernel PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 87 ticks
Thread: 34 idle ticks, 51 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 131 reads, 512 writes
hd1:0: 226 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1321 characters output
Key
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/vm/cow/cow-simple FAILURE:

Kernel panic in run: PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596
Translation of call stack:
0x000000800421847d: debug_panic (lib/kernel/debug.c:32)
0x000000800422148a: vm_alloc_page_with_initializer (vm/vm.c:57)
0x0000008004221f2b: supplemental_page_table_copy (vm/vm.c:321)
0x000000800421bdbd: __do_fork (userprog/process.c:169)
0x0000008004207596: kernel_thread (threads/thread.c:465)

OUTPUT FROM tests/vm/cow/cow-simple:

Kernel command line: -q -f put cow-simple run cow-simple
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 4,019 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'cow-simple' into the file system...
Executing 'cow-simple':
(cow-simple) begin
(cow-simple) check data consistency
Kernel PANIC at ../../vm/vm.c:55 in vm_alloc_page_with_initializer(): assertion `VM_TYPE(type) != VM_UNINIT' failed.
Call stack: 0x800421847d 0x800422148a 0x8004221f2b 0x800421bdbd 0x8004207596.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 183 ticks
Thread: 90 idle ticks, 91 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 90 reads, 8066 writes
hd1:0: 4019 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1271 characters output
Key